
package interfaces;

import archivo.ArchivoBinarioPatron;
import archivo.ManejoArchivotxtPlanoPatron;
import ipc_quimik.Patron;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Omar
 */
public class CrearPatron extends javax.swing.JFrame {
    Administrador menuAdmin;
    String filePath; //En esta variable guardaremos la ruta del archivo CSV del botón "Cargar Patrón"
    /**
     * Creates new form CrearPatron
     */
    public CrearPatron(Administrador menuAdmin) {
        initComponents();
        this.getContentPane().setBackground(Color.BLACK);
        this.menuAdmin = menuAdmin;
        filePath = "";
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitulo = new javax.swing.JLabel();
        labelCodigo = new javax.swing.JLabel();
        labelNombre = new javax.swing.JLabel();
        labelPatron = new javax.swing.JLabel();
        txtCodigoCrearPatron = new javax.swing.JTextField();
        txtNombreCrearPatron = new javax.swing.JTextField();
        btnCargarPatronCrearPatron = new javax.swing.JButton();
        btnCrearPatron = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Crear Patrón");
        setResizable(false);

        labelTitulo.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        labelTitulo.setForeground(new java.awt.Color(255, 255, 255));
        labelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitulo.setText("Crear Patrón");

        labelCodigo.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        labelCodigo.setForeground(new java.awt.Color(255, 255, 255));
        labelCodigo.setText("Código:");

        labelNombre.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        labelNombre.setForeground(new java.awt.Color(255, 255, 255));
        labelNombre.setText("Nombre:");

        labelPatron.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        labelPatron.setForeground(new java.awt.Color(255, 255, 255));
        labelPatron.setText("Patrón:");

        btnCargarPatronCrearPatron.setBackground(new java.awt.Color(153, 153, 153));
        btnCargarPatronCrearPatron.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        btnCargarPatronCrearPatron.setForeground(new java.awt.Color(255, 255, 255));
        btnCargarPatronCrearPatron.setText("Cargar Patrón");
        btnCargarPatronCrearPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarPatronCrearPatronActionPerformed(evt);
            }
        });

        btnCrearPatron.setBackground(new java.awt.Color(153, 153, 153));
        btnCrearPatron.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        btnCrearPatron.setForeground(new java.awt.Color(255, 255, 255));
        btnCrearPatron.setText("Crear");
        btnCrearPatron.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearPatronActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(labelCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtCodigoCrearPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(labelNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtNombreCrearPatron))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(labelPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnCargarPatronCrearPatron, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(btnCrearPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCodigoCrearPatron, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(labelCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNombreCrearPatron)
                    .addComponent(labelNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelPatron, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(btnCargarPatronCrearPatron, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnCrearPatron, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Este botón asignará la ruta del archivo donde está el patrón, en la variable "filePath"
    private void btnCargarPatronCrearPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarPatronCrearPatronActionPerformed
        //Con el "JFileChooser" le damos la orden que se abra la ventana del archivo
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(this); //Con "showOpenDialog" Aparece un cuadro de diálogo de selección de archivos "cargar archivo".
        
        //Condición
        if(seleccion == JFileChooser.APPROVE_OPTION) {//Comparamos las acciones almacenadas en la variable selección, y sólo si escojió un arhivo ejecuta las siguientes instrucciones:
            filePath = fileChooser.getSelectedFile().getAbsolutePath(); //Para obtener el Path, definimos de tipo string la variable "filePath"
        }
    }//GEN-LAST:event_btnCargarPatronCrearPatronActionPerformed

    private void btnCrearPatronActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearPatronActionPerformed
        String rutaPatron = "";
        rutaPatron = ("Patrón_"+txtCodigoCrearPatron.getText()+".html"); //Definimos la ruta del archivo html que contiene el patrón
        //Instanciamos nuestro manejador de archivos Binarios y con el metodo agregarContenido almacenamos el objeto de tipo Patron.
        ArchivoBinarioPatron archivo = new ArchivoBinarioPatron();
        //Primero Guardamos en un ArrayList los patrones en caso un archivo binario ya exista
        ArrayList<Patron> patrones = archivo.obtenerContenido("patrones.bin");
        //Validamos que no hayan campos de texto vacíos y que el código no exista ya
        ManejoArchivotxtPlanoPatron archivoCSV = new ManejoArchivotxtPlanoPatron();
        if((txtCodigoCrearPatron.getText().length() != 0) && (txtNombreCrearPatron.getText().length() != 0)) {
            if(patrones.size()== 0) {
                guardarNuevoPatron(archivo); //Si no hay patrones, simplemente guardamos el nuevo patron
                archivoCSV.crearArchivo(rutaPatron);
                archivoCSV.leerCSVpatron(filePath, rutaPatron);
            }
            else{ //Si existen patrones debemos recorrer el arreglo para validar que el código sea único
                boolean codigoExiste = false;
                for (Patron tempPatron : patrones) {
                    if(tempPatron.getCodigo().equals(txtCodigoCrearPatron.getText())){
                       codigoExiste = true; 
                    }
                }
                if(codigoExiste) {
                    JOptionPane.showMessageDialog(this, "El código ya existe");
                }
                else{
                    guardarNuevoPatron(archivo);
                    archivoCSV.crearArchivo(rutaPatron);
                    archivoCSV.leerCSVpatron(filePath, rutaPatron);
                }
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Falta información");
        }
    }//GEN-LAST:event_btnCrearPatronActionPerformed
    
    //Procedimiento que guarda el nuevo Patron en el archivo Binario recibiendo el archivo instanciado previamente
    private void guardarNuevoPatron(ArchivoBinarioPatron archivo){
        archivo.agregarContenido("patrones.bin", new Patron(txtCodigoCrearPatron.getText(),txtNombreCrearPatron.getText()));

        //Ahora limpiamos los campos de texto:
        txtCodigoCrearPatron.setText("");
        txtNombreCrearPatron.setText("");
        this.menuAdmin.actualizarTablaPatrones(); //Actualizamos la tabla de patrones en la ventana administrador 
    }
    
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarPatronCrearPatron;
    private javax.swing.JButton btnCrearPatron;
    private javax.swing.JLabel labelCodigo;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPatron;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTextField txtCodigoCrearPatron;
    private javax.swing.JTextField txtNombreCrearPatron;
    // End of variables declaration//GEN-END:variables
}
